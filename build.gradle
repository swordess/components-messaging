group 'com.mobisist.components'
version '1.0-SNAPSHOT'

buildscript {
    ext.kotlin_version = '1.0.3'

    repositories {
        maven {
            url "http://artifactory.mobisist.com/artifactory/libs-all"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'maven'
apply plugin: 'maven-publish'

sourceCompatibility = 1.8

repositories {
    maven {
        url "http://artifactory.mobisist.com/artifactory/libs-all"
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    compile "com.google.code.gson:gson:2.2.2"

    // weixin-java-tools
    compile 'me.chanjar:weixin-java-mp:1.3.3'

    // baidu push
    compile 'com.mobisist.thirdparty:baidu-push-api:3.0.1'

    testCompile 'junit:junit:4.11'
    testRuntime 'ch.qos.logback:logback-classic:1.1.2'
}


/* ***** common for local deploy and remote deploy ***** */

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}


/* ***** local maven deploy ***** */

// can be utilized for:
//   $ gradle publishToMavenLocal
// which is helpful when local testing
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
        }
    }
}


/* ***** remote maven deploy ***** */

artifacts {
    archives sourcesJar
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "${artifactoryUrl}/artifactory/libs-release-local") {
                authentication(userName: artifactoryUsername, password: artifactoryPassword)
            }
            snapshotRepository(url: "${artifactoryUrl}/artifactory/libs-snapshot-local") {
                authentication(userName: artifactoryUsername, password: artifactoryPassword)
            }
        }
    }
}
